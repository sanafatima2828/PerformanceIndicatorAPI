// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerformanceIndicator.Models;

namespace PerformanceIndicator.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191206135335_UserandRoleTableAdded")]
    partial class UserandRoleTableAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PerformanceIndicator.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = 1, Type = "Employee" },
                        new { Id = 2, Type = "Manager" }
                    );
                });

            modelBuilder.Entity("PerformanceIndicator.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNIC")
                        .IsRequired();

                    b.Property<string>("Designation")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Role_Id");

                    b.Property<float>("salary");

                    b.HasKey("Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, CNIC = "3740216028296", Designation = "Clerk", Name = "Kashif", Role_Id = 1, salary = 50000f },
                        new { Id = 2, CNIC = "3740216028298", Designation = "Manager", Name = "Atif", Role_Id = 2, salary = 50000f }
                    );
                });

            modelBuilder.Entity("PerformanceIndicator.Models.User", b =>
                {
                    b.HasOne("PerformanceIndicator.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
